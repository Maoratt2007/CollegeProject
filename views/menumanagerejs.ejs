<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="menu.css">
  <link rel="shortcut icon" type="x-icon" href="assets/home-pizza.png"><!--the icon of our web-->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Menu</title>
  <!-- Include jQuery library -->
  <script src="jquery.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"><!--the link that enables us to use icons -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script><!--call to bootstrap-->
</head>
<body>

  
<h1>Product List</h1>

<div class="filter-buttons">
  <label for="category">Category:</label>
  <select id="category" name="category">
    <option value="">All</option>
    <option value="drink">Drinks</option>
    <option value="food">Food</option>
    <option value="dessert">Dessert</option>
  </select>

  <label for="price">Price:</label>
  <select id="price" name="price">
    <option value="">All</option>
    <option value="5">until $5</option>
    <option value="20">until $20</option>
    <option value="25">until $25</option>
  </select>
</div>

<div id="order-class">
  <div id="orderList">

  </div>

</div>

<!-- Filter button and category buttons -->
<a href="/homepagemanager" class="fas fa-reply custom-reply-icon"></a> <!-- Add the "custom-reply-icon" class -->

<div id="productList">
  <!-- Product list will be rendered here -->
</div>


<script>
  // Replace this URL with your actual API endpoint to fetch product data
  const apiEndpoint = 'http://localhost:3000/api/products';
  const orderListContainer=document.getElementById('orderList');
  const productListContainer = $('#productList');

  function facebookfuncadd(name)
{
    const whatToPost = `We added ${name} to the menu`;
    const pageId = "113483408515771";
    const faceBookToken = "EAALthlaxhSoBOxjSgaek7gzY3CghpCTDLgaZAPhRQUzbyy2u7PoA4Ytj8FBG4tGmRfmqALLomw5ZBOAWgsZBzsZA6IdKNWArgIYAy0p6dh2VQv6ZCPYxBMzR8qlLwHfk8PZCOED1SXsy9xu0nhDXCOOl2krGgfEbTINVZCQsNDMabLSObohtbgCWVqxXMMNcwKlr28l6ewZD";
    $.ajax({
        url: `https://graph.facebook.com/${pageId}/feed`,
        method: "POST",
        data: {
          message: whatToPost,
          access_token: faceBookToken
        },
        success: function(response) {
          console.log(response);
        },
        error: function(error) {
          console.log(error);
        }
      });
    }
    
  function facebookfuncremove(name)
{
    const whatToPost = `We removed ${name} from the menu`;
    const pageId = "113483408515771";
    const faceBookToken = "EAALthlaxhSoBOxjSgaek7gzY3CghpCTDLgaZAPhRQUzbyy2u7PoA4Ytj8FBG4tGmRfmqALLomw5ZBOAWgsZBzsZA6IdKNWArgIYAy0p6dh2VQv6ZCPYxBMzR8qlLwHfk8PZCOED1SXsy9xu0nhDXCOOl2krGgfEbTINVZCQsNDMabLSObohtbgCWVqxXMMNcwKlr28l6ewZD";
    $.ajax({
        url: `https://graph.facebook.com/${pageId}/feed`,
        method: "POST",
        data: {
          message: whatToPost,
          access_token: faceBookToken
        },
        success: function(response) {
          console.log(response);
        },
        error: function(error) {
          console.log(error);
        }
      });
    }

    //query
$('#category').on('change', fetchqueryProducts);
$('#price').on('change', fetchqueryProducts);

function fetchqueryProducts() {
  const category = $('#category').val();
  const price = $('#price').val();

  $.ajax({
    url: apiEndpoint,
    method: 'GET',
    dataType: 'json',
    data: {
      category: category || undefined,
      price: price || undefined,
      isShow: true,
    },
    success: function (data) {
      console.log(data)
      renderProducts(data);
    },
    error: function (err) {
      alert(`Failed to get product data: ${err.responseJSON.errors}`);
    }
  });
}





  
  // Function to fetch and render product data
  function fetchProducts() {
    $.ajax({
      url: apiEndpoint,
      method: 'GET',
      dataType: 'json',
      success: function (data) {
        // Product data received successfully
        renderProducts(data);
      },
      error: function (err) {
        // Error handling in case API call fails
        console.log(err)
        alert('Failed to fetch product data.');
      }
    });
  }



  // Function to render the product data on the screen
  function renderProducts(products) {
    productListContainer.empty();
    // Loop through each product and create an HTML element to display it
    products.forEach(function (product) {
      const name=product.name;
      const price=product.price;
      const id=product._id;
      const category=product.category;
      const description=product.description;
      const image=product.image;
      const isShow=product.isShow;
      const webServiceId=product.webServiceId;
      const fat=product.fat;

      
      const productElement = `
        <div class="product">
          <h2 class="product-name">${product.name}</h2>
        
          <div class="product-price"> price: ${product.price}$</div>
          <input type="text" class="edit-product-price" value="${product.price}" style="display: none;">
          <button class="order-btn" data-product-id="${id}" onclick='editProductPrice(this, "${name}","${price}","${id}","${category}","${description}","${image}","${isShow}","${webServiceId}","${fat}")'> <i class="fas fa-edit"></i></button>

          <div class="product-description"> ${product.description}</div>
        
          
          <p> <img src="${product.image}" alt="${product.name}" width="100"></p>

          <button class="order-btn" onclick='addProductMenu("${name}","${price}","${id}","${category}","${description}","${image}")'">Add to menu</button>
          <button class="order-btn" onclick='removeProductMenu("${name}","${price}","${id}","${category}","${description}","${image}","${isShow}")'">Remove from menu</button>
          <button class="order-btn" onclick='removefromdatabase("${id}")'">Remove from database</button>
        </div>
      `;

      productListContainer.append(productElement);
    });
  }




  function editProductPrice(button, name, price, id, category, description, image, isShow,webServiceId, fat) 
{
  const productDiv = button.closest('.product');
  const productPrice = productDiv.querySelector('.product-price');
  const editInput = productDiv.querySelector('.edit-product-price');
  
  if (editInput.style.display === 'none') {
    productPrice.style.display = 'none';
    editInput.style.display = 'block';
    editInput.value =price;
    console.log(price);
    button.textContent = 'Save Price';
  } else {
    const newPrice = editInput.value;
    productPrice.textContent = "price: "+newPrice+"$";
    productPrice.style.display = 'block';
    editInput.style.display = 'none';
    button.textContent = 'Edit Price';
    
    const productId = button.getAttribute('data-product-id'); // Get the productId from the button's data attribute
    UpdatePriceInDataBase(productId, name, newPrice, id, category, description, image, isShow);

}
}


function UpdatePriceInDataBase(productId, name, price, id, category, description, image, isShow)
{

  const updateData={
    _id:id,
    name:name,
    price:price,
    category:category,
    description:description,
    image:image,
    isShow:isShow,
  };

  $.ajax({
    url: `http://localhost:3000/api/products/${productId}`,
    method: 'PUT',
    dataType: 'json',
    contentType: 'application/json',
    data: JSON.stringify(updateData)

  });
}



function removefromdatabase(id)
{
  $.ajax({
      url: `http://localhost:3000/api/products/${id}`,
      method: 'DELETE',
      dataType: 'json',
      success: function(response) {
            console.log("Product removed from database successfully", response);
        },
        error: function(error) {
            console.error("Error removing product from database ", error);
        }

  });

}



function addProductMenu(name, price, id, category,description, image) 
{
  // Prepare the data for the order
    const productData = {
    _id:id,
    name: name,
    price: price,
    category:category,
    description:description, 
    image:image,
    isShow:true
    // Add other data fields as needed
  };
  $.ajax({
      url: `http://localhost:3000/api/products/${id}`,
      method: 'PUT',
      dataType: 'json',
      contentType: 'application/json', // Set the content type to JSON
      data: JSON.stringify(productData), // Convert the data to JSON format
      success: function (data) {
        alert("you add to menu your product")

      },
      error: function (err) {
        // Error handling in case API call fails
        alert(`Failed to put product data, because: ${err.responseJSON.errors}`);
      }
    });

    facebookfuncadd(productData.name)

}


function removeProductMenu(name, price, id, category,description, image,isShow) 
{
  // Prepare the data for the order
  console.log(isShow);
 
    const productData = {
    _id:id,
    name: name,
    price: price,
    category:category,
    description:description, 
    image:image,
    isShow:false
    // Add other data fields as needed
  };
  $.ajax({
      url: `http://localhost:3000/api/products/${id}`,
      method: 'PUT',
      dataType: 'json',
      contentType: 'application/json', // Set the content type to JSON
      data: JSON.stringify(productData), // Convert the data to JSON format
      success: function (data) {
        alert("you remove to menu your product")

      },
      error: function (err) {
        // Error handling in case API call fails
        alert(`Failed to put product data unshow, because: ${err.responseJSON.errors}`);
      }
    });

    facebookfuncremove(productData.name)
}


// to check if you have products in your items if not its not make sence that you have the power to do order

function itmesIsExist()
{
  if(items.length==0)
  {
    alert("you have to choose products for do a order");
    window.location.href = "menu";
  }
  else{
    window.location.href="order"
  }
}



  $('.filter-btn').click(function () {
    $('.category-buttons').toggle();
    $('.product').show();
  });

  $('.category-btn').click(function (){
    const selectedCategory = $(this).data('category');
    $('.product').hide();
    $(`.product.${selectedCategory}`).show();
  });
  
    // Fetch the product data when the page loads
  $(document).ready(function () {
  console.log('insert to function');
    fetchProducts();

  });

    
  
</script>
</body>
</html>