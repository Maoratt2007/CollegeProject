<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="menu.css">
  <link rel="shortcut icon" type="x-icon" href="assets/home-pizza.png"><!--the icon of our web-->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Menu</title>
  <!-- Include jQuery library -->
  <script src="jquery.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"><!--the link that enables us to use icons -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script><!--call to bootstrap-->
</head>
<body>

  
<h1>Product List</h1>


<div class="filter-buttons">
  <label for="category">Category:</label>
  <select id="category" name="category">
    <option value="">All</option>
    <option value="drink">Drinks</option>
    <option value="food">Food</option>
    <option value="dessert">Dessert</option>
  </select>

  <label for="price">Price:</label>
  <select id="price" name="price">
    <option value="">All</option>
    <option value="5">until $5</option>
    <option value="15">until $15</option>
    <option value="25">until $25</option>
  </select>
  <label for="fat">Fat:</label>
  <select id="fat" name="fat">
    <option value="">All</option>
    <option value="5">5 kcal</option>
    <option value="15">10</option>
    <option value="25">15 </option>
  </select>
</div>

<div id="order-class">
  <div id="orderList">

  </div>
  <button onclick="itmesIsExist()">Submit And Continue</button>

</div>

<!-- Filter button and category buttons -->
<a href="/homepage" class="fas fa-reply custom-reply-icon"></a> <!-- Add the "custom-reply-icon" class -->

<div id="productList">
  <!-- Product list will be rendered here -->
</div>


<script>
  // Replace this URL with your actual API endpoint to fetch product data
  const apiEndpoint = 'http://localhost:3000/api/products';
  const orderListContainer=document.getElementById('orderList');
  const productListContainer = $('#productList');
  const userId = localStorage.getItem('userId');
  const items=[];
var total_price=0;
//query
// Add event listeners for category and price selection
$('#category').on('change', fetchqueryProducts);
$('#price').on('change', fetchqueryProducts);
$('#fat').on('change', fetchqueryProducts);


function fetchqueryProducts() {
  const category = $('#category').val();
  const price = $('#price').val();
  const fat = $('#fat').val();


  $.ajax({
    url: apiEndpoint,
    method: 'GET',
    dataType: 'json',
    data: {
      category: category || undefined,
      price: price || undefined,
      isShow: true,
      fat:fat|| undefined
      //|| help us make value with no value as undefined string like this "" consider to false
    },
    success: function (data) {
      renderProducts(data);
    },
    error: function (err) {
      alert(`Failed to get product data: ${err.responseJSON.errors}`);
    }
  });
}

  
  // Function to fetch and render product data
  function fetchProducts() {
    $.ajax({
      url: apiEndpoint,
      method: 'GET',
      dataType: 'json',
      data:{
      isShow: true
          },
      success: function (data) {
        // Product data received successfully
        renderProducts(data);
      },
      error: function (err) {
        // Error handling in case API call fails
        console.log(err)
        alert('Failed to fetch product data.');
      }
    });
  }



  // Function to render the product data on the screen
  function renderProducts(products) {
    productListContainer.empty(); // Clear existing products

    // Loop through each product and create an HTML element to display it
    products.forEach(function (product) {
      const name=product.name;
      const price=product.price;
      const id=product._id;
      const category=product.category;
      const description=product.description;
      const image=product.image;
      const isShow=product.isShow;
      const webServiceId=product.webServiceId;


      
      const productElement = $(`
            <div class="product">
                <h2>${product.name}</h2>
                Price: ${product.price}$
                <p> <img src="${product.image}" alt="${product.name}" width="100"></p>
                ${product.description}
                <div class="calories"></div>
                <button class="order-btn" onclick='addOrderProduct("${name}","${price}","${id}","${category}","${description}","${image}","${isShow}")'">Add to order</button>
            </div>
        `);
      if (webServiceId) {
            $.ajax({
                url: `https://world.openfoodfacts.org/api/v0/product/${webServiceId}`,
                method: "GET",
                success: function(response) {
                  productElement.find('.calories').append(`<p> nutritional value: ${response.product.nutriments.energy_value} calories</p>`);
                },
                error: function(error) {
                    console.error("Error finding data", error);
                }
            });
        }
      productListContainer.append(productElement);
    });
  }

function addOrderProduct(name, price, id, category,description, image,isShow) {
    const orderListContainer = $('#orderList');
  // Prepare the data for the order
  const productData = {
    _id:id,
    name: name,
    price: price,
    category:category,
    description:description, 
    image:image,
    isShow:isShow
    // Add other data fields as needed
  };

  // Send a POST request to the server's API endpoint for order creation

  const OrderProductElement = `
    <div class="productOrder">
      <h2>Name: "${productData.name}"</h2>
      Price: "${productData.price}"$
      <button class="removeProductOrder"> <a class="fas fa-trash" onclick='removeOrderProduct("${productData._id}")'></a></button>
    </div>
  `;
  items.push(productData._id);
  console.log(productData._id)
  orderListContainer.append(OrderProductElement);
  total_price+=parseInt(productData.price);
  localStorage.setItem('items', JSON.stringify(items));
  localStorage.setItem('total_price', JSON.stringify(total_price));

}


 function removeOrderProduct(productId) {
  const index = findIndexById(items,productId);

   if (index !== -1) {
    //update the price get the elemnt by id and take his price and minus it in total_price
    const pro=items[index];
    const price=0;
    $.ajax({
      url: `http://localhost:3000/api/products/${pro}`,
      method: 'GET',
      dataType: 'json',
      success: function (data) {
        // Product data received successfully
        console.log(data.price);
        total_price=total_price-data.price;
        console.log(total_price)
         localStorage.setItem('total_price', JSON.stringify(total_price));

      },
      error: function (err) {
        // Error handling in case API call fails
        console.log(err)
        alert('Failed to fetch remove product data.');
      }
    });
  }

     //update the product
     items.splice(index, 1); // Remove object from array and mongoose
     localStorage.setItem('items', JSON.stringify(items));// update the items in localStorage
     orderListContainer.removeChild(orderListContainer.children[index]); // Remove HTML element from div
}

//find index by id for delete
function findIndexById(array, targetId) {
  return array.findIndex(item => item === targetId);
}

// to check if you have products in your items if not its not make sence that you have the power to do order

function itmesIsExist(){
  if(items.length==0)
  {
    alert("you have to choose products for do a order");
    window.location.href = "menu";
  }
  else{
    window.location.href="order"
  }
}

  $('.filter-btn').click(function () {
    $('.category-buttons').toggle();
    $('.product').show();
  });

  $('.category-btn').click(function () {
    const selectedCategory = $(this).data('category');
    $('.product').hide();
    $(`.product.${selectedCategory}`).show();
  });
    // Fetch the product data when the page loads
    $(document).ready(function () {
    console.log('insert to function');
    fetchProducts();

    });

    
  
</script>
</body>
</html>