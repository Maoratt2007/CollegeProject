<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="Graph.css">
    <script
      src="https://code.jquery.com/jquery-3.7.0.js"
      integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM="
      crossorigin="anonymous">
    </script>

    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"
        integrity="sha256-lSjKY0/srUM9BE3dPm+c4fBo1dky2v27Gdjm2uoZaL0="
        crossorigin="anonymous">
    </script>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Graphes</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"><!--the link that enables us to use icons -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script><!--call to bootstrap-->    <!-- icon-->
    <link rel="shortcut icon" type="x-icon" href="assets/home-pizza.png"><!--the icon of our web-->
    <!-- bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <!-- bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <!-- fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato&family=Noto+Sans+Hebrew:wght@500;900&display=swap" rel="stylesheet">
</head>
<body>

    <header>
        <h1 class="title">Graphes</h1>
    </header>

    <a href="/homepagemanager"class="fas fa-reply custom-reply-icon" ></a><!--icon for user-->

    <h3 class="titleGraph1"> graph 1- amount of your price orders that users paid</h3>

    <div class="div-chart">
        <svg class="line-chart-1"></svg>
    </div>

    <h3 class="titleGraph2">graph 2- amount of your number users you bought</h3>

    <div class="div-chart">
        <svg class="line-chart-2"></svg>
    </div>

    <script>

//graph 1 the user that paid almost money
let orderData1;
  let arr_users1;

    function fetchusersDetails1() {

        // Fetch branch details for each branch
      
        $.ajax({
            url: `http://localhost:3000/api/order`,
            method: 'GET',
            dataType: 'json',
            contentType: 'application/json',
            data: {
                groupprice: true
            },
            success: function(data) {
                arr_users1 = data;
                const parsedData = parseData1(data);
                drawChart1(parsedData);
            },
            error: function(error) {
                console.error(error);
            }
        });  
        
    }

    function parseData1(data) {
        return data.map(user => ({
        name: user._id,
        total_price_user: user.totalOrdersPrice
    }));

    }

    function drawChart1(data) {
        console.log(data);
        const width = 928;
            const height = 500;
            const marginTop = 20;
            const marginRight = 30;
            const marginBottom = 30;
            const marginLeft = 40;

            const x = d3.scaleBand()
    .domain(data.map(d => d.name))//map change the array to d.name from d (d is user)
    .range([marginLeft, width - marginRight])
    .padding(0.8);

            const y = d3.scaleLinear()
                .domain([0, d3.max(data, d => d.total_price_user)])
                .range([height - marginBottom, marginTop]);

            const svg = d3.select('.line-chart-1')
                .attr('width', width)
                .attr('height', height);

            const g = svg.append('g')
                .attr("transform", `translate(0,${height - marginBottom})`)
                .call(d3.axisBottom(x).tickSizeOuter(0));

            svg.append("g")
            .attr("fill", "black")
            .selectAll()
            .data(data)
            .enter()
            .append("rect")
            .attr("x", d => x(d.name))
            .attr("y", d => y(d.total_price_user))
            .attr("height", d => y(0) - y(d.total_price_user))
            .attr("width", x.bandwidth());

        svg.append("g")
            .attr("transform", `translate(0, ${height - marginBottom})`)
            .call(d3.axisBottom(x).tickSizeOuter(0));


        svg.append("g")
            .attr("transform", `translate(${marginLeft},0)`)
            .call(d3.axisLeft(y).tickFormat(y => y.toFixed()).ticks(3))//the jump
            .call(g => g.append("text")
                .attr("x", -marginLeft)
                .attr("y", 10)
                .attr("fill", "currentColor")
                .attr("text-anchor", "start")
                .text("↑ amount of your price orders that users paid (+)"));

        return svg.node();
}

// graph 2 the user that make almost orders
  let orderData2;
  let arr_users2;


  function fetchusersDetails2() {
        $.ajax({
            url: `http://localhost:3000/api/order`,
            method: 'GET',
            dataType: 'json',
            contentType: 'application/json',
            data: {
                groupamount: true
            },
            success: function(data) {
                arr_users2 = data;
                const parsedData = parseData2(data);
                drawChart2(parsedData);
            },
            error: function(error) {
                console.error(error);
            }
        });

};





    function parseData2(data) {
    // Assuming your data is already structured with _id (userId) and orderCount
    return data.map(user => ({
        name: user._id,
        value: user.totalOrders
    }));
}

    function drawChart2(data) {
        console.log(data);
        const width = 928;
            const height = 500;
            const marginTop = 20;
            const marginRight = 30;
            const marginBottom = 30;
            const marginLeft = 40;

            const x = d3.scaleBand()
    .domain(data.map(d => d.name))
    .range([marginLeft, width - marginRight])
    .padding(0.8);

            const y = d3.scaleLinear()
                .domain([0, d3.max(data, d => d.value)])
                .range([height - marginBottom, marginTop]);

            const svg = d3.select('.line-chart-2')
                .attr('width', width)
                .attr('height', height);

            const g = svg.append('g')
                .attr("transform", `translate(0,${height - marginBottom})`)
                .call(d3.axisBottom(x).tickSizeOuter(0));

            svg.append("g")
            .attr("fill", "black")
            .selectAll()
            .data(data)
            .enter()
            .append("rect")
            .attr("x", d => x(d.name))
            .attr("y", d => y(d.value))
            .attr("height", d => y(0) - y(d.value))
            .attr("width", x.bandwidth());

        svg.append("g")
            .attr("transform", `translate(0, ${height - marginBottom})`)
            .call(d3.axisBottom(x).tickSizeOuter(0));


        svg.append("g")
            .attr("transform", `translate(${marginLeft},0)`)
            .call(d3.axisLeft(y).tickFormat(y => y.toFixed()).ticks(3))
            .call(g => g.append("text")
                .attr("x", -marginLeft)
                .attr("y", 10)
                .attr("fill", "currentColor")
                .attr("text-anchor", "start")
                .text("↑ amount of your number users you bought (+)"));

        return svg.node();
}
    $(document).ready(function () {
    console.log('insert to function');

    fetchusersDetails1() 
    fetchusersDetails2();
    });

  </script>
 <script src="https://d3js.org/d3.v7.min.js"></script>
 <script src="https://d3js.org/d3-array.v2.min.js"></script>
 <script src="https://d3js.org/d3.v4.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
</body>
</html>